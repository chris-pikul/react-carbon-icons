#!/usr/bin/env node
import Path from "node:path";
import { existsSync, mkdirSync } from "node:fs";
import { readdir, copyFile } from "node:fs/promises";

// Patch __dirname in case we don't have it. Unsure about the effectiveness of
// this, but as the old adage goes... "it works on my machine"
if (!("__dirname" in global)) global.__dirname = import.meta.dir ?? ".";

const rootDir = Path.resolve(__dirname);

const buildDir = Path.join(rootDir, "build");
if (!existsSync(buildDir)) {
  console.error(`Required build directory "${buildDir}" does not exist!`);
  process.exit(1);
}

const libDir = Path.join(rootDir, "lib");
if (!existsSync(libDir)) {
  mkdirSync(libDir, { recursive: true });
  console.log(`Created library directory "${libDir}".`);
}

const iconsDir = Path.join(libDir, "icons");
if (!existsSync(iconsDir)) {
  mkdirSync(iconsDir, { recursive: true });
  console.log(`Created library icons directory "${iconsDir}".`);
}

// Copy all src files that are ready
for (const file of await readdir(Path.join(buildDir, "src"))) {
  await copyFile(Path.join(buildDir, "src", file), Path.join(libDir, file));
}

// Copy all generated files
for (const file of await readdir(Path.join(buildDir, "gen"), {
  recursive: true,
})) {
  if (!file.includes(".")) continue;
  await copyFile(Path.join(buildDir, "gen", file), Path.join(libDir, file));
}
